<h1>Front-end</h1>

<p>Voici une liste de trucs front-end.</p>

<h2>Bootstrap navbar</h2>

  <nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container-fluid">
      <div class='d-flex'>
        <%= link_to_active home_path, class: "navbar-brand" do %>
          <%= image_tag '/visage_tiny.png', 'width': '36', class: 'd-inline-block align-text-middle', style: 'border: 1px solid #555; border-radius: 18px; margin-right: 2px;' %>
          Pascal Rainville
        <% end %>
        <% lang = in_english? ? :fr : :en %> 
        <% url = url_for(locale: lang) %>
        <%= link_to url, hreflang: lang, rel: 'alternate', class: 'nav-item nav-link' do %>
          <%= image_tag '/world.svg', 'width': '24', class: 'd-inline-block align-text-middle' %>
          <span style="color: rgba(0, 0, 0, 0.55);"><%= lang == :fr ? 'FR' : 'EN' %></span>
        <% end %>
      </div>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarTextDemo" aria-controls="navbarText" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarTextDemo">
        <div class="navbar-nav ms-auto mb-2 mb-lg-0">
          <%= link_to_active 'Alpha', about_path, class: "nav-item nav-link" %>
          <%= link_to_active 'Beta', about_path, class: "nav-item nav-link" %>
          <%= link_to_active 'Charlie', contact_path, class: "nav-item nav-link" %>
        </div>
      </div>
    </div>
  </nav>

<h2>Slider</h2>
<h2>Grid</h2>

<style>
.grid-row {
  display: flex;
}
.grid-row img { margin: auto; height: '100'; display: block; margin-bottom: 0.5em; max-height: 10vw;}
.grid-row > div:nth-child(odd) {width: 280px;}
.grid-row > div:nth-child(even) {flex-grow: 1;}
</style>

<div class='grid-row'>
  <div>
    <%= image_tag '/tux.svg' %>
    <b>Titre alpha</b><br/>
    <%= lorem_ipsum(15) %>
  </div>
  <div></div>
  <div>
    <%= image_tag '/tux.svg' %>
    <b>Titre beta</b><br/>
    <%= lorem_ipsum(15) %>
  </div>
  <div></div>
  <div>
    <%= image_tag '/tux.svg' %>
    <b>Titre charlie</b><br/>
    <%= lorem_ipsum(15) %>
  </div>
</div>
<br/>
<div class='grid-row'>
  <div>
    <%= image_tag '/tux.svg' %>
    <b>Titre delta</b><br/>
    <%= lorem_ipsum(15) %>
  </div>
  <div></div>
  <div>
    <%= image_tag '/tux.svg' %>
    <b>Titre epsilon</b><br/>
    <%= lorem_ipsum(15) %>
  </div>
  <div></div>
  <div></div>
</div>

<h1>CSS</h1>

<h2>Selectors</h2>

li:nth-child(5n+3) {font-weight: bold}<br/>
li:nth-child(even) {font-weight: bold}<br/>
li:nth-child(odd) {font-weight: bold}<br/>


<h1>OLD</h1>

<pre>
Cheatsheet
==========
Créée le Thursday 27 January 2022

# Rails

variable = "default" unless local_assigns[:variable]
content_tag(:div, content_tag(:p, "Hello world!"), class: "strong")

# Vanilla JS

document.addEventListener("DOMContentLoaded", function(event) {
})

var data = JSON.parse(document.getElementById("data").dataset.recipe)

document.createElement("div");
node.appendChild(textnode);

var elem = document.getElementById('elem-id')
document.querySelectorAll('[data-autocomplete-url]');
for (const elem of elements) {
}
elems = document.getElementsByClassName("inner-link");
for (var i = 0; i < elems.length; i++) {
  let elem = elems[i]
}

elem.style.transform = 'translateX(10px)'
elem.addEventListener("click", function() {/* content */});

elem.dataset.autocompleteUrl

for (let i = 0; i < choices.length; i++)


# JQuery
var elem = $('#elem-id')
elem.css("transform", "translateX(10px) !important")
elem.click(function() {/* content */});
$.get(url, function(data) {
  console.log("data:", data)
});
elem.append($("<ul><li>one</li><li>two</li><li>three</li></ul>")) // append a element created on the fly

# css

width: fit-content; !!!!!!!!!!!!!!!!!!!!!!!!

Combinators: ' ', '>', '+', '~'
Grouping with comma.
https://www.w3schools.com/Css/css_combinators.asp

opacity: 0.5;

width: calc(100% - 20px;)

/*To center an item*/
width: 400px;
transform: translateX(calc(50vh - 50%));

padding: 25px 50px 75px 100px; /* top, right, bottom, left */
padding: 25px 50px 75px; /* top, right and left, bottom */
padding: 25px 50px; /* top and bottom, right and left */
padding: 25px; /* all four */

Astuce: Au lieu de mettre des trucs inline (par exemple h1 ou h2 avec un icone à côté),
mettre les trucs dans un conteneur flex. Cela permet de faire des choses qui ne sont pas permises
avec inline. Par exemple, le width et le height je crois.

The owl. Je ne maîtrise pas encore ca...
#user-recipe-list > * + * {
  margin-bottom: 1.5rem;
}

## links
Un search field, quand tu cliques dessus il passe de 130px à width: 100%; Quand tu enlèves il redevient normal.
https://www.w3schools.com/howto/howto_css_animated_search.asp




# HOW TO DO THINGS:

## Centering

## A CSS tooltip
<p>Here we have some
  <span tabindex="0" data-descr="collection of words and punctuation">text</span> with a few
  <span tabindex="0" data-descr="small popups that appear when hovering">tooltips</span>.
</p>
span[data-descr] {
  position: relative;
  text-decoration: underline;
  color: #00F;
  cursor: help;
}
span[data-descr]:hover::after,
span[data-descr]:focus::after {
  content: attr(data-descr);
  position: absolute;
  left: 0;
  top: 24px;
  min-width: 200px;
  border: 1px #aaaaaa solid;
  border-radius: 10px;
  background-color: #ffffcc;
  padding: 12px;
  color: #000000;
  font-size: 14px;
  z-index: 1;
}

Pour choisir un thème
<style>
  input[type="radio"] {
	display: none;
  }
  input[type="radio"]:checked+label {
	border: 4px double blue;
  }
</style>
%= form.label :theme_id %>
  <div style="display: flex; gap: 20px;">
	% @themes.each do |theme| %>
	  %= form.radio_button :theme_id, theme.id %>
	  %= form.label :theme_id, value: theme.id do %>
		%= render partial: 'themes/stylesheet', locals: {theme: theme} %>
		% book = Book.new %>
		% book.theme = theme %>
		% book.name = "#{theme.name.capitalize} theme" %>
		% book.user = current_user %>
		% book.theme = theme %>
		%= render partial: "books/title_page_thumbnail", locals: {book: book} %>
	  % end %>
	% end %>
  </div>
</pre>
